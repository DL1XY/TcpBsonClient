//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.2012
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using Kernys.Bson;
using UnityEngine;

namespace TcpBsonClient
{
	public class CmdManager:IObserver
	{
		private UInt32 serverCmdCounter = 0;
		private Queue<IClientCmd> clientCmdlist;
		private Queue<IServerCmd> serverCmdlist;

		public CmdManager ()
		{
			this.clientCmdlist = new Queue<IClientCmd>();
			this.serverCmdlist = new Queue<IServerCmd>();
		}

		public void addClientCmd(IClientCmd cmd)
		{
			//Debug.Log("New Client Cmd added!");
			clientCmdlist.Enqueue(cmd);
			//cmd.execute ();
		}

		public void addServerCmd(IServerCmd cmd)
		{
			//Debug.Log("New Server Cmd added!");
			cmd.addId(++serverCmdCounter);
			serverCmdlist.Enqueue(cmd);

		}

		public Queue<IServerCmd> getServerCmds()
		{
			return serverCmdlist;
		}


		public void clean()
		{
			clientCmdlist.Clear ();
			serverCmdlist.Clear ();
		}

		public IClientCmd decodeBSON(BSONObject obj)
		{
			//Debug.Log("Try to decode !");
			if (obj.ContainsKey ("meta")) {
				string meta = obj ["meta"];
				//Debug.Log ("Meta:" + meta);
				Type t = Type.GetType ("UnityBSONClient." + meta);
				if (t == null) {
					//Debug.Log ("Meta:" + meta + " not found");
					return null;
				}
				IClientCmd cmd = (IClientCmd)Activator.CreateInstance (t);
				cmd.decode (obj);
				return cmd;
			}
			return null;
		}

		public BSONObject encodeBSON(IServerCmd cmd)
		{
			return cmd.encode ();

		}
	}
}
